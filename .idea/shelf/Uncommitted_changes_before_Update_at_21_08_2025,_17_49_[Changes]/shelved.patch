Index: src/main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <sstream>\n#include <json.hpp>\n#include \"modules/Starter.hpp\"\n#include \"modules/Scene.hpp\"\n#include <glm/glm.hpp>\n#include <glm/gtc/matrix_transform.hpp>\n\n#define GLM_FORCE_RADIANS\n#define GLM_FORCE_DEPTH_ZERO_TO_ONE\n\nstatic void dbgPrintMat4(const glm::mat4 &M, const char *name) {\n    std::cout << name << \":\\n\";\n    for (int r = 0; r < 4; ++r) {\n        std::cout << \"  \";\n        for (int c = 0; c < 4; ++c) std::cout << M[c][r] << \" \";\n        std::cout << \"\\n\";\n    }\n}\n\nstruct VertexSimp { glm::vec3 pos; glm::vec3 norm; glm::vec2 UV; };\n\nstruct GlobalUBO {\n    alignas(16) glm::vec3 lightDir;\n    alignas(16) glm::vec4 lightColor;\n    alignas(16) glm::vec3 eyePos;\n};\n\nstruct LocalUBO {\n    alignas(16) glm::mat4 mvpMat;\n    alignas(16) glm::mat4 mMat;\n    alignas(16) glm::mat4 nMat;\n};\n\nclass CG_hospital : public BaseProject {\nprotected:\n    float Ar = 4.0f/3.0f;\n\n    RenderPass RP;\n    DescriptorSetLayout DSLglobal, DSLmesh;\n\n    VertexDescriptor VDsimp;\n    Pipeline         PMesh;\n\n    DescriptorSet    DSGubo;\n\n    // Several Models\n    Scene SC;\n    std::vector<VertexDescriptorRef> VDRs;\n    std::vector<TechniqueRef>PRs;\n\n    // --- Camera (simple fixed cam) ---\n    glm::vec3 camPos{0.0f, 1.6f, 6.0f};\n\n    // --- Object transform state (controlled by keyboard) ---\n    glm::vec3 objPos   {0.0f, 0.0f, 0.0f};\n    float     objYaw   = 0.0f; // around Y\n    float     objPitch = 0.0f; // around X\n    float     objRoll  = 0.0f; // around Z\n    float     objScale = 0.01f;\n\n    // Speeds\n    float MOVE_SPEED = 10.0f;                 // meters/sec\n    float ROT_SPEED  = glm::radians(90.0f);  // rad/sec\n\n    void setWindowParameters() {\n        windowWidth = 1280;\n        windowHeight = 720;\n        windowTitle = \"CG_hospital\";\n        windowResizable = GLFW_TRUE;\n        Ar = float(windowWidth) / float(windowHeight);\n    }\n\n    void onWindowResize(int w, int h) {\n        std::cout << \"Window resized to: \" << w << \" x \" << h << \"\\n\";\n        if (h > 0) Ar = float(w) / float(h);\n        RP.width  = w;\n        RP.height = h;\n    }\n\n    void localInit() {\n\n        // DSLs\n        // set = 0 (global)\n        DSLglobal.init(this, {\n          { 0, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, VK_SHADER_STAGE_ALL_GRAPHICS,\n            sizeof(GlobalUBO), 1 }\n        });\n\n        // set = 1 (local)\n        DSLmesh.init(this, {\n          { 0, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,         VK_SHADER_STAGE_VERTEX_BIT,\n            sizeof(LocalUBO), 1 },\n          { 1, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT,\n            0, 1 },\n          { 2, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT,\n            1, 1 }\n        });\n\n        // Vertex layout\n        VDsimp.init(this,\n        { {0, sizeof(VertexSimp), VK_VERTEX_INPUT_RATE_VERTEX} },\n        {\n            {0, 0, VK_FORMAT_R32G32B32_SFLOAT, offsetof(VertexSimp,pos),  sizeof(glm::vec3), POSITION},\n            {0, 1, VK_FORMAT_R32G32B32_SFLOAT, offsetof(VertexSimp,norm), sizeof(glm::vec3), NORMAL},\n            {0, 2, VK_FORMAT_R32G32_SFLOAT,    offsetof(VertexSimp,UV),   sizeof(glm::vec2), UV}\n        }\n        );\n\n        VDRs.resize(1);\n        VDRs[0].init(\"VDsimp\", &VDsimp); // OR use the name “VMesh” if your JSON expects that label\n\n\n        RP.init(this);\n        RP.properties[0].clearValue = {0.05f, 0.05f, 0.08f, 1.0f};\n\n        PMesh.init(this, &VDsimp,\n        \"shaders/Mesh.vert.spv\",\n  \"shaders/Mesh.frag.spv\",\n  { &DSLglobal, &DSLmesh }\n        );\n        PMesh.setCullMode(VK_CULL_MODE_NONE);\n        PMesh.setPolygonMode(VK_POLYGON_MODE_FILL);\n\n        PRs.resize(1);\n        PRs[0].init(\"Mesh\", {\n          { &PMesh, { /* set0 (global) */{},\n                      /* set1 (local)  */{\n                        /* binding 0: UBO  */ { true, 0, {} },\n                        /* binding 1: tex  */ { true, 1, { } }\n                      } } }\n        }, /*TotalNtextures*/2, &VDsimp);\n\n        // Pool sizing\n        DPSZs.uniformBlocksInPool = 3;\n        DPSZs.texturesInPool      = 4;\n        DPSZs.setsInPool          = 3;\n\n        std::cout << \"\\nLoading the scene\\n\\n\";\n        SC.init(this, 1, VDRs, PRs, \"assets/models/scene.json\");\n\n        // After SC.init(...)\n        if (SC.TechniqueInstanceCount > 0 && SC.TI[0].InstanceCount > 0) {\n            for (int i = 0; i < SC.TI[0].InstanceCount; ++i) {\n                auto &inst = SC.TI[0].I[i];\n                // Scale it down and push it in front of the camera\n                inst.Wm = glm::translate(glm::mat4(1.0f), glm::vec3(0.0f, 1.2f, -5.0f))\n                        * glm::scale(glm::mat4(1.0f),    glm::vec3(0.1f)); // adjust 0.1f as needed\n            }\n        }\n    }\n\n    void pipelinesAndDescriptorSetsInit() {\n        RP.create();\n        PMesh.create(&RP);\n\n        DSGubo.init(this, &DSLglobal, {});\n\n        SC.pipelinesAndDescriptorSetsInit();\n\n        // Register CB filler\n        submitCommandBuffer(\"main\", 0, populateCommandBufferAccess, this);\n    }\n\n    void pipelinesAndDescriptorSetsCleanup() {\n        PMesh.cleanup();\n        RP.cleanup();\n        DSGubo.cleanup();\n\n        SC.pipelinesAndDescriptorSetsCleanup();\n    }\n\n    void localCleanup() {\n        DSLglobal.cleanup();\n        DSLmesh.cleanup();\n        PMesh.destroy();\n        RP.destroy();\n\n        SC.localCleanup();\n    }\n\n    void populateCommandBuffer(VkCommandBuffer cmdBuffer, int currentImage){\n        RP.begin(cmdBuffer, currentImage);\n\n\n        PMesh.bind(cmdBuffer);\n\n        // You own set=0 (global). Scene will NOT bind it for you.\n        DSGubo.bind(cmdBuffer, PMesh, 0, currentImage);\n\n        // Scene binds only its local set(s) and issues vkCmdDrawIndexed\n        SC.populateCommandBuffer(cmdBuffer, 0, currentImage);\n\n        RP.end(cmdBuffer);\n    }\n\n    void updateUniformBuffer(uint32_t currentImage) {\n        if (glfwGetKey(window, GLFW_KEY_ESCAPE)) glfwSetWindowShouldClose(window, GL_TRUE);\n\n        // --- Inputs (WASD/RF move, arrows/QE rotate) ---\n        float dt = 0.0f; glm::vec3 m(0.0f), r(0.0f); bool fire = false;\n        getSixAxis(dt, m, r, fire);\n\n        static float yaw   = 0.0f;                 // radians\n        static float pitch = 0.0f;\n        static glm::vec3 camPos = glm::vec3(0.0f, 1.6f, 6.0f);\n\n        const float ROT_SPEED  = glm::radians(90.0f);  // rad/sec\n        const float MOVE_SPEED = 5.0f;                 // m/s (tweak)\n\n        yaw   -= r.x * ROT_SPEED * dt;\n        pitch -= r.y * ROT_SPEED * dt;\n        pitch  = glm::clamp(pitch, glm::radians(-89.0f), glm::radians(89.0f));\n\n        // R = Ry * Rx\n        glm::mat4 Ry = glm::rotate(glm::mat4(1), yaw,   glm::vec3(0,1,0));\n        glm::mat4 Rx = glm::rotate(glm::mat4(1), pitch, glm::vec3(1,0,0));\n        glm::mat4 R  = Ry * Rx;\n\n        glm::vec3 fwd = glm::normalize(glm::vec3(R * glm::vec4(0,0,-1,0)));\n        glm::vec3 rgt = glm::normalize(glm::vec3(R * glm::vec4(1,0, 0,0)));\n        glm::vec3 up  = glm::normalize(glm::vec3(R * glm::vec4(0,1, 0,0)));\n\n        camPos += rgt * (m.x * MOVE_SPEED * dt);\n        camPos += up  * (m.y * MOVE_SPEED * dt);\n        camPos += fwd * (m.z * MOVE_SPEED * dt);\n\n        // --- Matrices ---\n        float Ar = float(windowWidth) / float(windowHeight);\n        glm::mat4 Prj = glm::perspective(glm::radians(60.0f), Ar, 0.01f, 200.0f);\n        Prj[1][1] *= -1.0f;\n\n        glm::mat4 View = glm::lookAt(camPos, camPos + fwd, glm::vec3(0,1,0));\n\n        // --- Global UBO ---\n        GlobalUBO g{};\n        g.lightDir   = glm::normalize(glm::vec3(1,2,3));\n        g.lightColor = glm::vec4(1,1,1,1);\n        g.eyePos     = camPos;\n\n        // --- Local UBOs for all instances in technique 0 ---\n        for (int i = 0; i < SC.TI[0].InstanceCount; ++i) {\n            auto &inst = SC.TI[0].I[i];\n\n            LocalUBO l{};\n            l.mMat   = inst.Wm;\n            l.nMat   = glm::inverse(glm::transpose(l.mMat));\n            l.mvpMat = Prj * View * l.mMat;\n\n            // set=0, binding 0 → global UBO\n            inst.DS[0][0]->map(currentImage, &g, 0);\n            // set=1, binding 0 → local UBO\n            inst.DS[0][1]->map(currentImage, &l, 0);\n        }\n    }\n\n\n    static void populateCommandBufferAccess(VkCommandBuffer commandBuffer, int currentImage, void *params) {\n        auto *app = reinterpret_cast<CG_hospital*>(params);\n        app->populateCommandBuffer(commandBuffer, currentImage);\n    }\n};\n\nint main() {\n    CG_hospital app;\n    try { app.run(); }\n    catch (const std::exception& e) { std::cerr << e.what() << std::endl; return EXIT_FAILURE; }\n    return EXIT_SUCCESS;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main.cpp b/src/main.cpp
--- a/src/main.cpp	(revision 5bfe365c4e404b4633723348a150a3e6ce514a01)
+++ b/src/main.cpp	(date 1755787823961)
@@ -136,7 +136,7 @@
         DPSZs.setsInPool          = 3;
 
         std::cout << "\nLoading the scene\n\n";
-        SC.init(this, 1, VDRs, PRs, "assets/models/scene.json");
+        SC.init(this, 1, VDRs, PRs, "assets/models/sceneK.json");
 
         // After SC.init(...)
         if (SC.TechniqueInstanceCount > 0 && SC.TI[0].InstanceCount > 0) {
@@ -205,7 +205,7 @@
         static glm::vec3 camPos = glm::vec3(0.0f, 1.6f, 6.0f);
 
         const float ROT_SPEED  = glm::radians(90.0f);  // rad/sec
-        const float MOVE_SPEED = 5.0f;                 // m/s (tweak)
+        const float MOVE_SPEED = 10.0f;                 // m/s (tweak)
 
         yaw   -= r.x * ROT_SPEED * dt;
         pitch -= r.y * ROT_SPEED * dt;
Index: assets/models/scene.json
===================================================================
diff --git a/assets/models/scene.json b/assets/models/scene.json
deleted file mode 100644
--- a/assets/models/scene.json	(revision 5bfe365c4e404b4633723348a150a3e6ce514a01)
+++ /dev/null	(revision 5bfe365c4e404b4633723348a150a3e6ce514a01)
@@ -1,22 +0,0 @@
-{
-	"models": [
-		{ "id": "M_AC", "VD": "VDsimp", "model": "assets/models/M_Aircondition_01.mgcg", "format": "MGCG" }
-	],
-	"textures": [
-		{ "id": "T_AC", "texture": "assets/textures/T_Aircondition_01.PNG", "format": "C" },
-		{ "id": "Noise", "texture": "assets/textures/Perlin_noise.png", "format": "C" }
-	],
-	"instances": [
-		{
-			"technique": "Mesh",
-			"elements": [
-				{ "id": "ac",
-					"model": "M_AC",
-					"texture": ["T_AC", "Noise"],
-					"translate": [0, 1.2, -3],
-					"scale": [1,1,1]
-				}
-			]
-		}
-	]
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"BackendCodeEditorMiscSettings\">\n    <option name=\"/Default/Housekeeping/FeatureSuggestion/FeatureSuggestionManager/DisabledSuggesters/=SwitchToGoToActionSuggester/@EntryIndexedValue\" value=\"true\" type=\"bool\" />\n    <option name=\"/Default/Housekeeping/GlobalSettingsUpgraded/IsUpgraded/@EntryValue\" value=\"true\" type=\"bool\" />\n    <option name=\"/Default/RiderDebugger/RiderRestoreDecompile/RestoreDecompileSetting/@EntryValue\" value=\"false\" type=\"bool\" />\n  </component>\n  <component name=\"CMakePresetLoader\">{\n  &quot;useNewFormat&quot;: true\n}</component>\n  <component name=\"CMakeProjectFlavorService\">\n    <option name=\"flavorId\" value=\"CMakePlainProjectFlavor\" />\n  </component>\n  <component name=\"CMakeReloadState\">\n    <option name=\"reloaded\" value=\"true\" />\n  </component>\n  <component name=\"CMakeRunConfigurationManager\">\n    <generated>\n      <config projectName=\"CG_hospital\" targetName=\"CG_hospital_Shaders\" />\n      <config projectName=\"CG_hospital\" targetName=\"CG_hospital\" />\n    </generated>\n  </component>\n  <component name=\"CMakeSettings\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\n    </configurations>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"72edde42-13d2-4df3-b1df-094f5281efff\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/assets/models/gelatoBus.mgcg\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/assets/textures/Perlin_noise.png\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/assets/textures/textures0.png\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/editor.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/editor.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/assets/models/idle.bin\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/assets/models/idle.gltf\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/assets/models/scene.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/assets/models/scene.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/shaders/Mesh.frag\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/shaders/Mesh.frag\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/shaders/Mesh.frag.spv\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/shaders/Mesh.vert\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/shaders/Mesh.vert\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/shaders/Mesh.vert.spv\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main.cpp\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;kienndo&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/kienndo/CG-hospital.git&quot;,\n    &quot;accountId&quot;: &quot;9c7942f2-945c-498f-80d6-c46cbb45dd19&quot;\n  }\n}</component>\n  <component name=\"ProjectApplicationVersion\">\n    <option name=\"ide\" value=\"CLion\" />\n    <option name=\"majorVersion\" value=\"2025\" />\n    <option name=\"minorVersion\" value=\"1.4\" />\n    <option name=\"productBranch\" value=\"Classic\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"30eV670x9jIoaIwUGUL1kPC6Ihi\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"CMake Application.CG_hospital.executor\": \"Run\",\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\n    \"RunOnceActivity.RadMigrateCodeStyle\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252\": \"true\",\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\n    \"RunOnceActivity.west.config.association.type.startup.service\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"cf.first.check.clang-format\": \"false\",\n    \"cidr.known.project.marker\": \"true\",\n    \"git-widget-placeholder\": \"main\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/assets/textures\" />\n      <recent name=\"$PROJECT_DIR$/assets/models\" />\n      <recent name=\"$PROJECT_DIR$/shaders\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"CMake Application.CG_hospital\">\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\">\n      <method v=\"2\">\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"CG_hospital\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"CG_hospital\" TARGET_NAME=\"CG_hospital\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"CG_hospital\" RUN_TARGET_NAME=\"CG_hospital\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"CG_hospital_Shaders\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"CG_hospital\" TARGET_NAME=\"CG_hospital_Shaders\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"CMake Application.CG_hospital\" />\n      <item itemvalue=\"CMake Application.CG_hospital_Shaders\" />\n    </list>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"72edde42-13d2-4df3-b1df-094f5281efff\" name=\"Changes\" comment=\"\" />\n      <created>1753987846939</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1753987846939</updated>\n      <workItem from=\"1753987848772\" duration=\"3337000\" />\n      <workItem from=\"1754242465351\" duration=\"1544000\" />\n      <workItem from=\"1755098209073\" duration=\"541000\" />\n      <workItem from=\"1755591599800\" duration=\"26434000\" />\n      <workItem from=\"1755707332338\" duration=\"9875000\" />\n      <workItem from=\"1755774526039\" duration=\"6904000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"UnknownFeatures\">\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"*.frag\" />\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"*.vert\" />\n  </component>\n  <component name=\"VCPKGProject\">\n    <isAutomaticCheckingOnLaunch value=\"false\" />\n    <isAutomaticFoundErrors value=\"true\" />\n    <isAutomaticReloadCMake value=\"true\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5bfe365c4e404b4633723348a150a3e6ce514a01)
+++ b/.idea/workspace.xml	(date 1755791393338)
@@ -29,19 +29,30 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="72edde42-13d2-4df3-b1df-094f5281efff" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/assets/models/gelatoBus.mgcg" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/assets/textures/Perlin_noise.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/assets/textures/textures0.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/editor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/editor.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/models/idle.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/models/idle.gltf" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/models/scene.json" beforeDir="false" afterPath="$PROJECT_DIR$/assets/models/scene.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/shaders/Mesh.frag" beforeDir="false" afterPath="$PROJECT_DIR$/shaders/Mesh.frag" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/shaders/Mesh.frag.spv" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/shaders/Mesh.vert" beforeDir="false" afterPath="$PROJECT_DIR$/shaders/Mesh.vert" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/shaders/Mesh.vert.spv" beforeDir="false" />
+    <list default="true" id="72edde42-13d2-4df3-b1df-094f5281efff" name="Changes" comment="one aircondition through scene.json works">
+      <change afterPath="$PROJECT_DIR$/assets/models/M_Wall_01.mgcg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/assets/models/sceneK.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/models/scene.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/BACK DOOR 5.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/BRICK 8.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Brick8 NM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/FlatNM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/GARAGE DOOR 2.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/GaraeDoor2NM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/METAL GREY.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Painted_metal_02_2K_Roughness.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/PavementConcreteNM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Pavement_Concrete_Marked_Footprints_UV_CM_1.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/ROOFTOP.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/RooftopNM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Untitled-0.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Untitled-1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Untitled-2.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Untitled.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/WALL 6.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/Wall6NM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/WallWhiteLinedNM.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/textures/MainScene/wall white LINED.jpg" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.cpp" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -62,12 +73,12 @@
     &quot;assignee&quot;: &quot;kienndo&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/kienndo/CG-hospital.git&quot;,
-    &quot;accountId&quot;: &quot;9c7942f2-945c-498f-80d6-c46cbb45dd19&quot;
-  }
-}</component>
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/kienndo/CG-hospital.git",
+    "accountId": "e7054ae5-1cc6-406b-8903-c947dff39a28"
+  }
+}]]></component>
   <component name="ProjectApplicationVersion">
     <option name="ide" value="CLion" />
     <option name="majorVersion" value="2025" />
@@ -108,8 +119,8 @@
 }]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
-      <recent name="$PROJECT_DIR$/assets/textures" />
       <recent name="$PROJECT_DIR$/assets/models" />
+      <recent name="$PROJECT_DIR$/assets/textures" />
       <recent name="$PROJECT_DIR$/shaders" />
     </key>
   </component>
@@ -146,8 +157,16 @@
       <workItem from="1755098209073" duration="541000" />
       <workItem from="1755591599800" duration="26434000" />
       <workItem from="1755707332338" duration="9875000" />
-      <workItem from="1755774526039" duration="6904000" />
+      <workItem from="1755774526039" duration="10177000" />
     </task>
+    <task id="LOCAL−00001" summary="one aircondition through scene.json works">
+      <option name="closed" value="true" />
+      <created>1755784641466</created>
+      <option name="number" value="LOCAL−00001" />
+      <option name="presentableId" value="LOCAL−00001" />
+      <updated>1755784641466</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -173,4 +192,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="one aircondition through scene.json works" />
+    <option name="LAST_COMMIT_MESSAGE" value="one aircondition through scene.json works" />
+  </component>
 </project>
\ No newline at end of file
Index: assets/models/sceneK.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/models/sceneK.json b/assets/models/sceneK.json
new file mode 100644
--- /dev/null	(date 1755788498552)
+++ b/assets/models/sceneK.json	(date 1755788498552)
@@ -0,0 +1,36 @@
+{
+	"models": [
+		{ "id": "M_Wall_01",  "VD": "VDsimp", "model": "assets/models/M_Wall_01.mgcg",  "format": "MGCG" },
+		{ "id": "M_Floor_01", "VD": "VDsimp", "model": "assets/models/M_Floor_01.mgcg", "format": "MGCG" }
+	],
+	"textures": [
+		{ "id": "T_Wall_01",  "texture": "assets/textures/T_Wall_01.png",  "format": "C" },
+		{ "id": "T_Floor_01", "texture": "assets/textures/T_Floor_01.png", "format": "C" },
+		{ "id": "Noise",      "texture": "assets/textures/Perlin_noise.png", "format": "C" }
+	],
+
+	"instances": [
+		{
+			"technique": "Mesh",
+			"elements": [
+
+				{
+					"id": "floor",
+					"model": "M_Floor_01",
+					"texture": ["T_Floor_01", "Noise"],
+					"translate": [0.0, 0.0, 0.0],
+					"scale": [6.0, 1.0, 8.0]
+				},
+				{
+					"id": "wall_back",
+					"model": "M_Wall_01",
+					"texture": ["T_Wall_01", "Noise"],
+					"translate": [0.0, 1.5, -4.0],
+					"eulerAngles": [0.0, 180.0, 0.0],
+					"scale": [6.0, 3.0, 1.0]
+				}
+
+			]
+		}
+	]
+}
